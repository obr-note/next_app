{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/machoair/Desktop/react-test/next_app/components/Account.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport fireapp from '../store';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props); // this.login_check();\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.login_check = this.login_check.bind(this);\n  }\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  }\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  }\n\n  login_check() {\n    if (this.props.login === false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"account\",\n        onClick: this.login_check,\n        children: [\"LOGINED: \", this.props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/machoair/Desktop/react-test/next_app/components/Account.js"],"names":["React","Component","connect","firebase","fireapp","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAM9BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN,EADgB,CAEhB;;AAFgB,mCALV;AACNC,MAAAA,QAAQ,EAAE,MADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KAKU;;AAGhB,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,KAAK,GAAE;AACL,QAAIC,QAAQ,GAAG,IAAIV,QAAQ,CAACW,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAb,IAAAA,QAAQ,CAACW,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACGK,IADH,CACSC,MAAD,IAAU;AACd,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,aADY;AAElBC,QAAAA,KAAK,EAAE;AACLV,UAAAA,KAAK,EAAE,IADF;AAELW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFjB;AAGLC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHd;AAILC,UAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWoB,IAJZ;AAKLC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWqB;AALb;AAFW,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACD,KAbH;AAcD;;AAEDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA7B,IAAAA,QAAQ,CAACW,IAAT,GAAgBmB,OAAhB;AACA,SAAK1B,KAAL,CAAWa,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAE,aADY;AAElBC,MAAAA,KAAK,EAAE;AACLV,QAAAA,KAAK,EAAE,KADF;AAELW,QAAAA,QAAQ,EAAE,eAFL;AAGLG,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,IAAI,EAAE,EAJD;AAKLC,QAAAA,KAAK,EAAE;AALF;AAFW,KAApB;AAUA,SAAKrB,KAAL,CAAW2B,UAAX;AACD;;AAEDxB,EAAAA,WAAW,GAAE;AACX,QAAI,KAAKH,KAAL,CAAWK,KAAX,KAAqB,KAAzB,EAA+B;AAC7B,WAAKA,KAAL;AACD,KAFD,MAEO;AACL,WAAKkB,MAAL;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAE;AACN,wBACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKzB,WAAxC;AAAA,gCACY,KAAKH,KAAL,CAAWgB,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/D6B;;AAkEhClB,OAAO,GAAGH,OAAO,CAAEkC,KAAD,IAAUA,KAAX,CAAP,CAAyB/B,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from \"firebase\";\nimport fireapp from '../store';\n\nclass Account extends Component {\n  style = {\n    fontSize: \"12pt\",\n    padding: \"5px 10px\"\n  }\n\n  constructor(props){\n    super(props);\n    // this.login_check();\n    this.login_check = this.login_check.bind(this);\n  }\n\n  login(){\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider)\n      .then((result)=>{\n        this.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: true,\n            username: result.user.displayName,\n            email: result.user.email,\n            data: this.props.data,\n            items: this.props.items\n          }\n        });\n        this.props.onLogined();\n      });\n  }\n\n  logout(){\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    })\n    this.props.onLogouted();\n  }\n\n  login_check(){\n    if (this.props.login === false){\n      this.login();\n    } else {\n      this.logout();\n    }\n  }\n\n  render(){\n    return (\n      <p className=\"login\">\n        <span className=\"account\" onClick={this.login_check}>\n          LOGINED: {this.props.username}\n        </span>\n      </p>\n    );\n  }\n}\n\nAccount = connect((state)=> state)(Account);\nexport default Account;"]},"metadata":{},"sourceType":"module"}