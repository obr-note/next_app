{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyABaIvVQkl1HQdL-efhULI8ILW4-A78Qg0\",\n  authDomain: \"obrnote-react.firebaseapp.com\",\n  databaseURL: \"https://obrnote-react-default-rtdb.firebaseio.com\",\n  projectId: \"obrnote-react\",\n  storageBucket: \"obrnote-react.appspot.com\",\n  messagingSenderId: \"1027965329061\",\n  appId: \"1:1027965329061:web:944a2b139e7ca0b726374c\",\n  measurementId: \"G-JXCQKV3NPJ\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp;\nconst initial = {\n  login: false,\n  username: '(click here)',\n  email: '',\n  data: [],\n  items: []\n};\n\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    case 'UPDATE_USER':\n      return action.value;\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n} // const initial = {\n//   message: 'START',\n//   count: 0\n// }\n// function counterReducer (state = initial, action){\n//   switch (action.type){\n//     case 'INCREMENT':\n//       return {\n//         message: 'INCREMENT',\n//         count: state.count + 1\n//       };\n//     case 'DECREMENT':\n//       return {\n//         message: 'DECREMENT',\n//         count: state.count - 1\n//       };\n//     case 'RESET':\n//       return {\n//         message: 'RESET',\n//         count: initial.count\n//       };\n//     default:\n//       return state;\n//   }\n// }\n// export function initStore(state = initial){\n//   return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n// }","map":{"version":3,"sources":["/Users/machoair/Desktop/react-test/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","error","console","log","message","initial","login","username","email","data","items","fireReducer","state","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,+BAFO;AAGnBC,EAAAA,WAAW,EAAE,mDAHM;AAInBC,EAAAA,SAAS,EAAE,eAJQ;AAKnBC,EAAAA,aAAa,EAAE,2BALI;AAMnBC,EAAAA,iBAAiB,EAAE,eANA;AAOnBC,EAAAA,KAAK,EAAE,4CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWA,IAAIC,OAAJ;;AACA,IAAI;AACFV,EAAAA,QAAQ,CAACW,aAAT,CAAuBV,cAAvB;AACD,CAFD,CAEE,OAAOW,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,eAAeL,OAAf;AAEA,MAAMM,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,QAAQ,EAAE,cAFI;AAGdC,EAAAA,KAAK,EAAE,EAHO;AAIdC,EAAAA,IAAI,EAAE,EAJQ;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAhB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,OAA7B,EAAsCQ,MAAtC,EAA6C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,KAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,OAAO,SAASI,SAAT,CAAmBJ,KAAK,GAAGP,OAA3B,EAAmC;AACxC,SAAOnB,WAAW,CAACyB,WAAD,EAAcC,KAAd,EAAqBzB,eAAe,CAACC,eAAD,CAApC,CAAlB;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyABaIvVQkl1HQdL-efhULI8ILW4-A78Qg0\",\n  authDomain: \"obrnote-react.firebaseapp.com\",\n  databaseURL: \"https://obrnote-react-default-rtdb.firebaseio.com\",\n  projectId: \"obrnote-react\",\n  storageBucket: \"obrnote-react.appspot.com\",\n  messagingSenderId: \"1027965329061\",\n  appId: \"1:1027965329061:web:944a2b139e7ca0b726374c\",\n  measurementId: \"G-JXCQKV3NPJ\"\n};\n\nvar fireapp;\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (error) {\n  console.log(error.message);\n}\nexport default fireapp;\n\nconst initial = {\n  login: false,\n  username: '(click here)',\n  email: '',\n  data: [],\n  items: []\n}\n\nfunction fireReducer(state = initial, action){\n  switch (action.type){\n    case 'UPDATE_USER':\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial){\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware))\n}\n\n// const initial = {\n//   message: 'START',\n//   count: 0\n// }\n\n// function counterReducer (state = initial, action){\n//   switch (action.type){\n//     case 'INCREMENT':\n//       return {\n//         message: 'INCREMENT',\n//         count: state.count + 1\n//       };\n//     case 'DECREMENT':\n//       return {\n//         message: 'DECREMENT',\n//         count: state.count - 1\n//       };\n//     case 'RESET':\n//       return {\n//         message: 'RESET',\n//         count: initial.count\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// export function initStore(state = initial){\n//   return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n// }"]},"metadata":{},"sourceType":"module"}