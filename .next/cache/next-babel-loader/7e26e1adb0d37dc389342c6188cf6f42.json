{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/machoair/Desktop/react-test/next_app/components/AddressShow.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Comonent } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    if (this.props.login === false) {\n      Router.push('/address');\n    }\n\n    this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/address');\n  }\n\n  getAddress(email) {\n    let db = firebase.database();\n    let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n    ref0.set(false);\n    let ref = db.ref('address/') + Lib.encodeEmail(this.props.email);\n    let self = this;\n    ref.orderByKey().equalTo(Lib.encodeEmail(email)).on('value', snapshot => {\n      for (let i in snapshot.val()) {\n        let d = Lib.deepcopy(snapshot.val()[i]);\n        self.setState({\n          address: d1\n        });\n        break;\n      }\n    });\n  }\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  doAction() {\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.database();\n    let d = new Date().getTime();\n    let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n    ref.set('to: ' + this.state.input);\n    let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n    ref2.set('from: ' + this.state.input);\n    let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n    ref3.set(true);\n    this.setState({\n      input: ''\n    });\n  }\n\n  render() {\n    if (this.state.address === null) {\n      this.getAddress(Router.query.email);\n    }\n\n    let items = [];\n\n    if (this.state.address !== null) {\n      for (let n in this.state.address.messages) {\n        items.unshift( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: this.state.address.messages[n]\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), this.state.address !== null ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"NAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.address.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"MAIL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.address.tel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"MEMO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.address.memo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          size: \"40\",\n          value: this.state.input,\n          onChange: this.doChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.doAction,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), this.state.address !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAddressShow = connect(state => state)(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["/Users/machoair/Desktop/react-test/next_app/components/AddressShow.js"],"names":["React","Comonent","connect","firebase","Lib","Account","Router","AddressShow","Component","constructor","props","fontSize","padding","login","push","state","last","input","email","query","address","message","logined","bind","doChange","doAction","console","log","logouted","getAddress","db","database","ref0","ref","encodeEmail","set","self","orderByKey","equalTo","on","snapshot","i","val","d","deepcopy","setState","d1","e","target","value","from","to","Date","getTime","ref2","ref3","render","items","n","messages","unshift","name","tel","memo","item"],"mappings":"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","sourcesContent":["import React, {Comonent} from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n  style = {\n    fontSize: \"12pt\",\n    padding: \"5px 10px\"\n  }\n\n  constructor(props){\n    super(props);\n    if (this.props.login === false){\n      Router.push('/address');\n    }\n    this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    }\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  logined(){\n    console.log('logined.');\n  }\n  logouted(){\n    Router.push('/address')\n  }\n\n  getAddress(email){\n    let db = firebase.database();\n    let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n    ref0.set(false);\n    let ref = db.ref('address/') + Lib.encodeEmail(this.props.email);\n    let self = this;\n    ref.orderByKey()\n      .equalTo(Lib.encodeEmail(email))\n      .on('value', (snapshot)=>{\n        for(let i in snapshot.val()){\n          let d = Lib.deepcopy(snapshot.val()[i]);\n          self.setState({\n            address: d1\n          });\n          break;\n        }\n      });\n  }\n\n  doChange(e){\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  doAction(){\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.database();\n    let d = new Date().getTime();\n    let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n    ref.set('to: ' + this.state.input);\n    let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n    ref2.set('from: ' + this.state.input);\n    let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n    ref3.set(true);\n    this.setState({ input: '' })\n  }\n\n  render(){\n    if (this.state.address === null){\n      this.getAddress(Router.query.email);\n    }\n    let items = [];\n    if (this.state.address !== null){\n      for(let n in this.state.address.messages){\n        items.unshift(<li key={n}>\n          {this.state.address.messages[n]}\n        </li>);\n      }\n    }\n    return (\n      <div>\n        <Account onLogined={this.logined} onLogouted={this.logouted} />\n        <p>{this.state.message}</p>\n        <hr />\n        {this.state.address !== null\n        ?\n        <table>\n          <tbody>\n            <tr>\n              <th>NAME</th>\n              <td>{this.state.address.name}</td>\n            </tr>\n            <tr>\n              <th>MAIL</th>\n              <td>{this.state.email}</td>\n            </tr>\n            <tr>\n              <th>TEL</th>\n              <td>{this.state.address.tel}</td>\n            </tr>\n            <tr>\n              <th>MEMO</th>\n              <td>{this.state.address.memo}</td>\n            </tr>\n          </tbody>\n        </table>\n        :\n        <p>no-address</p>\n        }\n        <hr />\n        <fieldset>\n          <p>Message:</p>\n          <input type=\"text\" size=\"40\" value={this.state.input} onChange={this.doChange} />\n          <button onClick={this.doAction}>send</button>\n        </fieldset>\n        {this.state.address !== null\n        ?\n        <div>\n          <p>※{this.state.address.name}さんとのメッセージ</p>\n          <ul>{item}</ul>\n        </div>\n        :\n        <p>※メッセージはありません。</p>\n        }\n      </div>\n    );\n  }\n}\nAddressShow = connect((state)=> state)(AddressShow);\nexport default AddressShow;"]},"metadata":{},"sourceType":"module"}