{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // var firebaseConfig = {\n//   apiKey: \"AIzaSyABaIvVQkl1HQdL-efhULI8ILW4-A78Qg0\",\n//   authDomain: \"obrnote-react.firebaseapp.com\",\n//   databaseURL: \"https://obrnote-react-default-rtdb.firebaseio.com\",\n//   projectId: \"obrnote-react\",\n//   storageBucket: \"obrnote-react.appspot.com\",\n//   messagingSenderId: \"1027965329061\",\n//   appId: \"1:1027965329061:web:944a2b139e7ca0b726374c\",\n//   measurementId: \"G-JXCQKV3NPJ\"\n// };\n// var fireapp;\n// try {\n//   firebase.initializeApp(firebaseConfig);\n// } catch (error) {\n//   console.log(error.message);\n// }\n// export default fireapp;\n\nconst initial = {};\n\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    case 'TESTACTION':\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n} // const initial = {\n//   message: 'START',\n//   count: 0\n// }\n// function counterReducer (state = initial, action){\n//   switch (action.type){\n//     case 'INCREMENT':\n//       return {\n//         message: 'INCREMENT',\n//         count: state.count + 1\n//       };\n//     case 'DECREMENT':\n//       return {\n//         message: 'DECREMENT',\n//         count: state.count - 1\n//       };\n//     case 'RESET':\n//       return {\n//         message: 'RESET',\n//         count: initial.count\n//       };\n//     default:\n//       return state;\n//   }\n// }\n// export function initStore(state = initial){\n//   return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n// }","map":{"version":3,"sources":["/Users/machoair/Desktop/react-test/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","initial","fireReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAGF,OAA7B,EAAsCG,MAAtC,EAA6C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOF,KAAP;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD;;AAED,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGF,OAA3B,EAAmC;AACxC,SAAOJ,WAAW,CAACK,WAAD,EAAcC,KAAd,EAAqBL,eAAe,CAACC,eAAD,CAApC,CAAlB;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyABaIvVQkl1HQdL-efhULI8ILW4-A78Qg0\",\n//   authDomain: \"obrnote-react.firebaseapp.com\",\n//   databaseURL: \"https://obrnote-react-default-rtdb.firebaseio.com\",\n//   projectId: \"obrnote-react\",\n//   storageBucket: \"obrnote-react.appspot.com\",\n//   messagingSenderId: \"1027965329061\",\n//   appId: \"1:1027965329061:web:944a2b139e7ca0b726374c\",\n//   measurementId: \"G-JXCQKV3NPJ\"\n// };\n\n// var fireapp;\n// try {\n//   firebase.initializeApp(firebaseConfig);\n// } catch (error) {\n//   console.log(error.message);\n// }\n// export default fireapp;\n\nconst initial = {}\n\nfunction fireReducer(state = initial, action){\n  switch (action.type){\n    case 'TESTACTION':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial){\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware))\n}\n\n// const initial = {\n//   message: 'START',\n//   count: 0\n// }\n\n// function counterReducer (state = initial, action){\n//   switch (action.type){\n//     case 'INCREMENT':\n//       return {\n//         message: 'INCREMENT',\n//         count: state.count + 1\n//       };\n//     case 'DECREMENT':\n//       return {\n//         message: 'DECREMENT',\n//         count: state.count - 1\n//       };\n//     case 'RESET':\n//       return {\n//         message: 'RESET',\n//         count: initial.count\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// export function initStore(state = initial){\n//   return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n// }"]},"metadata":{},"sourceType":"module"}